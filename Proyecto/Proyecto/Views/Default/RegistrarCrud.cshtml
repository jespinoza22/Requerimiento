
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = Model.IdUsuario>0 ? "Modificar" : "Registrar";
    List<Datos.Model.Rol> roles = ViewBag.Roles;
}

@model Datos.Model.Usuario

<h2>@(Model.IdUsuario > 0 ? "Modificar" : "Registrar")</h2>



<div class="form-horizontal">
    <h4>@(Model.IdUsuario > 0 ? Model.Nombres : "Usuario")</h4>
    <hr />
    @using (Html.BeginForm("Registrar", "Default", FormMethod.Post, new { id = "frm-alumno" }))
            {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.IdUsuario)
        if (Model.IdUsuario > 0)
        {
            @Html.HiddenFor(x=>x.Password)
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
            </div>
        </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    if(Model.IdUsuario == 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <input type="password" class="form-control" name="Password" value="@Model.Password" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">Repetir password</label>
                            <div class="col-md-6">
                                <input type="password" class="form-control" name="repetirPass" />
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <label class="control-label col-md-2">Nonbre Usuario</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Usuario1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Usuario1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Rol</label>
                        <div class="col-md-6">
                            <select class="form-control" name="IdRol">
                                <option value="0">Seleccione</option>
                                @foreach (var rol in roles)
                                {
                                    <option value="@rol.IdRol" @(rol.IdRol == Model.IdRol ? "Selected" : "")>@rol.NombreRol</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-6">
                            <button data-ajax="true" data-confirm="¿Esta seguro de guardar el registro" type="submit" class="btn btn-primary">Guardar</button>
                        </div>
                    </div>
    }
</div>
@*<script>
    $(document).ready(function () {
        $("#frm-alumno").submit(function () {
            var form = $(this);

            $.ajax({
                dataType: 'JSON',
                type: 'POST',
                url: form.attr('action'),
                data: form.serialize(),
                success: function (r) {
                    if (r.response) {
                        window.location.href = r.href;
                    } else {
                        alert(r.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus + ' ' + errorThrown);
                }
            });

            return false;
        })
    })
</script>*@

